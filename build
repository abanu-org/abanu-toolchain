GCC_VERSION=8.2.0
export ROOTDIR=/mnt/tmp-data/sebastian/abanu-toolchain
export PREFIX="$ROOTDIR/opt/gcc-$GCC_VERSION"

# bootstrap binutils

cd $ROOTDIR
mkdir -p build-binutils
cd build-binutils
../binutils-gdb/configure --prefix="$PREFIX" --disable-nls --disable-werror
#make -j12
#make install-strip -j12

# bootstrap gcc

cd $ROOTDIR
mkdir -p build-gcc
cd build-gcc
../gcc/configure --prefix="$PREFIX" --disable-nls --enable-languages=c,c++
#make -j12
#make install-strip -j12

exit 0

export PATH="$ROOTDIR/opt/gcc-$GCC_VERSION/bin:$PATH"

export PREFIX="$ROOTDIR/opt/gcc-$GCC_VERSION-cross"
export TARGET=i686-elf
export PATH="$PREFIX/bin:$PATH"

# build cross binutils

cd $ROOTDIR
 mkdir build-binutils-cross
cd build-binutils-cross
../binutils-gdb/configure --target=$TARGET --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror
make -j12
make install-strip -j12

# build cross gcc

cd $ROOTDIR
# The $PREFIX/bin dir _must_ be in the PATH. We did that above.
which -- $TARGET-as || echo $TARGET-as is not in the PATH
mkdir -p build-gcc-cross
cd build-gcc-cross
../gcc/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --enable-languages=c,c++ --without-headers
make make all-gcc -j13
make all-target-libgcc -j13
make install-strip-gcc -j13
make install-strip-target-libgcc -j13

cd $ROOTDIR
#tar cf - opt | pigz > gcc-bin.tar.gz
